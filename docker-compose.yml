version: "3"
networks:
  app-tier:
    driver: bridge

services:
  app:
    image: laravel-www
    container_name: laravel-www
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - redis
      - mysql
    env_file:
      - .docker.env
    volumes:
      - .:/var/www/html
    networks:
      - app-tier
    ports:
      - "8090:80"
    environment:
      APP_ENV: local
      CONTAINER_ROLE: app

  scheduler:
    image: laravel-www
    container_name: laravel-scheduler
    depends_on:
      - app
      - redis
      - mysql
    env_file:
      - .docker.env
    volumes:
      - .:/var/www/html
    networks:
      - app-tier
    environment:
      CONTAINER_ROLE: scheduler
      APP_ENV: local

  queue:
    image: laravel-www
    container_name: laravel-queue
    depends_on:
      - app
      - redis
      - mysql
    env_file:
      - .docker.env
    volumes:
      - .:/var/www/html
    networks:
      - app-tier
    environment:
      CONTAINER_ROLE: queue
      APP_ENV: local

  redis:
    container_name: laravel-redis
    image: redis:6-alpine
    networks:
      - app-tier
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis:/data

  mysql:
    container_name: laravel-mysql
    image: mysql:8.0
    networks:
      - app-tier
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}

volumes:
  redis:
    driver: "local"
  mysql:
    driver: "local"
